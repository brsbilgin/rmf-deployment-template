version: "3.7"
services:

  rmf-building-map-server:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-building-map-server
    build:
      context: .
      dockerfile: rmf/rmf-building-map-server.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_PICS_CONFIG_FILE}
        target: ${BUILDING_PICS_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-door-supervisor:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-door-supervisor
    build:
      context: .
      dockerfile: rmf/rmf-door-supervisor.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  # rmf-fleet-adapter-neuronbot:
  #   image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
  #   build:
  #     context: .
  #     dockerfile: rmf/rmf-fleet-adapter.Dockerfile
  #   volumes:
  #     - type: bind
  #       source: ${DDS_CONFIG}
  #       target: ${DDS_CONFIG_MOUNTPATH}
  #     - type: bind
  #       source: ${NAV_GRAPH_FILES}
  #       target: ${NAV_GRAPH_FILES_MOUNTPATH}
  #   network_mode: host
  #   environment:
  #     - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
  #     - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
  #     - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
  #     - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
  #     - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
  #     - RMF_FLEET_ADAPTER_CONTROL_TYPE=${NEURONBOT_RMF_FLEET_ADAPTER_CONTROL_TYPE}
  #     - RMF_FLEET_ADAPTER_FLEET_NAME=${NEURONBOT_RMF_FLEET_ADAPTER_FLEET_NAME}
  #     - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${NEURONBOT_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
  #     - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${NEURONBOT_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
  #     - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${NEURONBOT_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
  #     - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${NEURONBOT_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
  #     - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${NEURONBOT_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
  #     - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${NEURONBOT_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
  #     - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${NEURONBOT_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
  #     - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${NEURONBOT_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
  #     - RMF_FLEET_ADAPTER_RETRY_WAIT=${NEURONBOT_RMF_FLEET_ADAPTER_RETRY_WAIT}
  #     - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${NEURONBOT_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
  #     - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${NEURONBOT_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
  #     - RMF_FLEET_ADAPTER_PERFORM_LOOP=${NEURONBOT_RMF_FLEET_ADAPTER_PERFORM_LOOP}
  #     - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${NEURONBOT_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
  #     - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${NEURONBOT_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
  #     - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${NEURONBOT_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
  #     - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${NEURONBOT_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
  #     - RMF_FLEET_ADAPTER_MASS=${NEURONBOT_RMF_FLEET_ADAPTER_MASS}
  #     - RMF_FLEET_ADAPTER_INERTIA=${NEURONBOT_RMF_FLEET_ADAPTER_INERTIA}
  #     - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${NEURONBOT_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
  #     - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${NEURONBOT_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
  #     - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${NEURONBOT_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
  #     - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${NEURONBOT_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
  #     - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${NEURONBOT_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
  #     - RMF_FLEET_ADAPTER_SERVER_URI=${NEURONBOT_RMF_FLEET_ADAPTER_SERVER_URI}

  # rmf-fleet-adapter-magni:
  #   image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
  #   build:
  #     context: .
  #     dockerfile: rmf/rmf-fleet-adapter.Dockerfile
  #   volumes:
  #     - type: bind
  #       source: ${DDS_CONFIG}
  #       target: ${DDS_CONFIG_MOUNTPATH}
  #     - type: bind
  #       source: ${NAV_GRAPH_FILES}
  #       target: ${NAV_GRAPH_FILES_MOUNTPATH}
  #   network_mode: host
  #   environment:
  #     - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
  #     - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
  #     - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
  #     - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
  #     - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
  #     - RMF_FLEET_ADAPTER_CONTROL_TYPE=${MAGNI_RMF_FLEET_ADAPTER_CONTROL_TYPE}
  #     - RMF_FLEET_ADAPTER_FLEET_NAME=${MAGNI_RMF_FLEET_ADAPTER_FLEET_NAME}
  #     - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${MAGNI_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
  #     - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${MAGNI_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
  #     - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${MAGNI_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
  #     - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${MAGNI_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
  #     - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${MAGNI_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
  #     - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${MAGNI_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
  #     - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${MAGNI_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
  #     - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${MAGNI_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
  #     - RMF_FLEET_ADAPTER_RETRY_WAIT=${MAGNI_RMF_FLEET_ADAPTER_RETRY_WAIT}
  #     - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${MAGNI_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
  #     - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${MAGNI_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
  #     - RMF_FLEET_ADAPTER_PERFORM_LOOP=${MAGNI_RMF_FLEET_ADAPTER_PERFORM_LOOP}
  #     - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${MAGNI_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
  #     - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${MAGNI_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
  #     - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${MAGNI_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
  #     - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${MAGNI_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
  #     - RMF_FLEET_ADAPTER_MASS=${MAGNI_RMF_FLEET_ADAPTER_MASS}
  #     - RMF_FLEET_ADAPTER_INERTIA=${MAGNI_RMF_FLEET_ADAPTER_INERTIA}
  #     - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${MAGNI_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
  #     - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${MAGNI_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
  #     - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${MAGNI_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
  #     - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${MAGNI_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
  #     - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${MAGNI_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
  #     - RMF_FLEET_ADAPTER_SERVER_URI=${MAGNI_RMF_FLEET_ADAPTER_SERVER_URI}
      
  # rmf-free-fleet-server-neuronbot:
  #   image: ${REGISTRY_URL}/rmf-deployment/rmf-free-fleet-server
  #   build:
  #     context: .
  #     dockerfile: rmf/rmf-free-fleet-server.Dockerfile
  #   volumes:
  #     - type: bind
  #       source: ${DDS_CONFIG}
  #       target: ${DDS_CONFIG_MOUNTPATH}
  #   network_mode: host
  #   environment:
  #     - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
  #     - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
  #     - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
  #     - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
  #     - RMF_FREE_FLEET_SERVER_FLEET_NAME=${NEURONBOT_RMF_FREE_FLEET_SERVER_FLEET_NAME}
  #     - RMF_FREE_FLEET_SERVER_DDS_DOMAIN=${NEURONBOT_RMF_FREE_FLEET_SERVER_DDS_DOMAIN}
  #     - RMF_FREE_FLEET_SERVER_TRANSLATION_X=${RMF_FREE_FLEET_SERVER_TRANSLATION_X}
  #     - RMF_FREE_FLEET_SERVER_TRANSLATION_Y=${RMF_FREE_FLEET_SERVER_TRANSLATION_Y}
  #     - RMF_FREE_FLEET_SERVER_ROTATION=${RMF_FREE_FLEET_SERVER_ROTATION}
  #     - RMF_FREE_FLEET_SERVER_SCALE=${RMF_FREE_FLEET_SERVER_SCALE}

  # rmf-free-fleet-server-magni:
  #   image: ${REGISTRY_URL}/rmf-deployment/rmf-free-fleet-server
  #   build:
  #     context: .
  #     dockerfile: rmf/rmf-free-fleet-server.Dockerfile
  #   volumes:
  #     - type: bind
  #       source: ${DDS_CONFIG}
  #       target: ${DDS_CONFIG_MOUNTPATH}
  #   network_mode: host
  #   environment:
  #     - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
  #     - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
  #     - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
  #     - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
  #     - RMF_FREE_FLEET_SERVER_FLEET_NAME=${MAGNI_RMF_FREE_FLEET_SERVER_FLEET_NAME}
  #     - RMF_FREE_FLEET_SERVER_DDS_DOMAIN=${MAGNI_RMF_FREE_FLEET_SERVER_DDS_DOMAIN}
  #     - RMF_FREE_FLEET_SERVER_TRANSLATION_X=${RMF_FREE_FLEET_SERVER_TRANSLATION_X}
  #     - RMF_FREE_FLEET_SERVER_TRANSLATION_Y=${RMF_FREE_FLEET_SERVER_TRANSLATION_Y}
  #     - RMF_FREE_FLEET_SERVER_ROTATION=${RMF_FREE_FLEET_SERVER_ROTATION}
  #     - RMF_FREE_FLEET_SERVER_SCALE=${RMF_FREE_FLEET_SERVER_SCALE}
  
  rmf-lift-supervisor:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-lift-supervisor
    build:
      context: .
      dockerfile: rmf/rmf-lift-supervisor.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-task-dispatcher:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-task-dispatcher
    build:
      context: .
      dockerfile: rmf/rmf-task-dispatcher.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_BIDDING_TIME_WINDOW=${RMF_BIDDING_TIME_WINDOW}

  rmf-traffic-blockade:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-traffic-blockade
    build:
      context: .
      dockerfile: rmf/rmf-traffic-blockade.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
    
  rmf-traffic-schedule-monitor:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-traffic-schedule-monitor
    build:
      context: .
      dockerfile: rmf/rmf-traffic-schedule-monitor.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-traffic-schedule:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-traffic-schedule
    build:
      context: .
      dockerfile: rmf/rmf-traffic-schedule.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-trajectory-visualizer:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-trajectory-visualizer
    build:
      context: .
      dockerfile: rmf/rmf-trajectory-visualizer.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
