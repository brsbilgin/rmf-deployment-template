version: "3.7"
services:

  rmf-building-map-server:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-building-map-server
    build:
      context: .
      dockerfile: rmf/rmf-building-map-server.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_PICS_CONFIG_FILE}
        target: ${BUILDING_PICS_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-door-supervisor:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-door-supervisor
    build:
      context: .
      dockerfile: rmf/rmf-door-supervisor.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-fleet-adapter-tinyA:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTA_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTA_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTA_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTA_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTA_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTA_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTA_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTA_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTA_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTA_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTA_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTA_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTA_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTA_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTA_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTA_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTA_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTA_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTA_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTA_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTA_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTA_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTA_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTA_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTA_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTA_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyB:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTB_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTB_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTB_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTB_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTB_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTB_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTB_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTB_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTB_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTB_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTB_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTB_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTB_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTB_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTB_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTB_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTB_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTB_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTB_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTB_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTB_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTB_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTB_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTB_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTB_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTB_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyC:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTC_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTC_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTC_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTC_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTC_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTC_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTC_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTC_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTC_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTC_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTC_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTC_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTC_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTC_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTC_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTC_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTC_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTC_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTC_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTC_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTC_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTC_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTC_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTC_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTC_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTC_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyD:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTD_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTD_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTD_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTD_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTD_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTD_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTD_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTD_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTD_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTD_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTD_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTD_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTD_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTD_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTD_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTD_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTD_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTD_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTD_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTD_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTD_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTD_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTD_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTD_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTD_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTD_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyE:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTE_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTE_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTE_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTE_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTE_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTE_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTE_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTE_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTE_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTE_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTE_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTE_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTE_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTE_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTE_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTE_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTE_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTE_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTE_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTE_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTE_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTE_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTE_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTE_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTE_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTE_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyF:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTF_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTF_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTF_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTF_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTF_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTF_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTF_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTF_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTF_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTF_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTF_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTF_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTF_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTF_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTF_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTF_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTF_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTF_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTF_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTF_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTF_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTF_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTF_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTF_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTF_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTF_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyF:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTG_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTG_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTG_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTG_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTG_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTG_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTG_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTG_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTG_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTG_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTG_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTG_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTG_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTG_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTG_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTG_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTG_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTG_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTG_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTG_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTG_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTG_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTG_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTG_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTG_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTG_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-fleet-adapter-tinyH:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTH_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTH_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTH_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTH_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTH_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTH_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTH_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTH_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTH_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTH_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTH_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTH_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTH_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTH_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTH_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTH_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTH_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTH_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTH_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTH_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTH_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTH_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTH_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTH_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTH_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTH_RMF_FLEET_ADAPTER_SERVER_URI}
  rmf-fleet-adapter-tinyI:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTI_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTI_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTI_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTI_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTI_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTI_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTI_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTI_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTI_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTI_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTI_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTI_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTI_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTI_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTI_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTI_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTI_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTI_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTI_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTI_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTI_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTI_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTI_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTI_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTI_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTI_RMF_FLEET_ADAPTER_SERVER_URI}
  rmf-fleet-adapter-tinyJ:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-fleet-adapter
    build:
      context: .
      dockerfile: rmf/rmf-fleet-adapter.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}
    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_FLEET_ADAPTER_CONTROL_TYPE=${TINYROBOTJ_RMF_FLEET_ADAPTER_CONTROL_TYPE}
      - RMF_FLEET_ADAPTER_FLEET_NAME=${TINYROBOTJ_RMF_FLEET_ADAPTER_FLEET_NAME}
      - RMF_FLEET_ADAPTER_NAV_GRAPH_FILE=${TINYROBOTJ_RMF_FLEET_ADAPTER_NAV_GRAPH_FILE}
      - RMF_FLEET_ADAPTER_LINEAR_VELOCITY=${TINYROBOTJ_RMF_FLEET_ADAPTER_LINEAR_VELOCITY}
      - RMF_FLEET_ADAPTER_ANGULAR_VELOCITY=${TINYROBOTJ_RMF_FLEET_ADAPTER_ANGULAR_VELOCITY}
      - RMF_FLEET_ADAPTER_LINEAR_ACCELERATION=${TINYROBOTJ_RMF_FLEET_ADAPTER_LINEAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION=${TINYROBOTJ_RMF_FLEET_ADAPTER_ANGULAR_ACCELERATION}
      - RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS=${TINYROBOTJ_RMF_FLEET_ADAPTER_FOOTPRINT_RADIUS}
      - RMF_FLEET_ADAPTER_VICINITY_RADIUS=${TINYROBOTJ_RMF_FLEET_ADAPTER_VICINITY_RADIUS}
      - RMF_FLEET_ADAPTER_DELAY_THRESHOLD=${TINYROBOTJ_RMF_FLEET_ADAPTER_DELAY_THRESHOLD}
      - RMF_FLEET_ADAPTER_RETRY_WAIT=${TINYROBOTJ_RMF_FLEET_ADAPTER_RETRY_WAIT}
      - RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT=${TINYROBOTJ_RMF_FLEET_ADAPTER_DISCOVERY_TIMEOUT}
      - RMF_FLEET_ADAPTER_PERFORM_DELIVERIES=${TINYROBOTJ_RMF_FLEET_ADAPTER_PERFORM_DELIVERIES}
      - RMF_FLEET_ADAPTER_PERFORM_LOOP=${TINYROBOTJ_RMF_FLEET_ADAPTER_PERFORM_LOOP}
      - RMF_FLEET_ADAPTER_PERFORM_CLEANING=${TINYROBOTJ_RMF_FLEET_ADAPTER_PERFORM_CLEANING}
      - RMF_FLEET_ADAPTER_BATTERY_VOLTAGE=${TINYROBOTJ_RMF_FLEET_ADAPTER_BATTERY_VOLTAGE}
      - RMF_FLEET_ADAPTER_BATTERY_CAPACITY=${TINYROBOTJ_RMF_FLEET_ADAPTER_BATTERY_CAPACITY}
      - RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT=${TINYROBOTJ_RMF_FLEET_ADAPTER_BATTERY_CHARGING_CURRENT}
      - RMF_FLEET_ADAPTER_MASS=${TINYROBOTJ_RMF_FLEET_ADAPTER_MASS}
      - RMF_FLEET_ADAPTER_INERTIA=${TINYROBOTJ_RMF_FLEET_ADAPTER_INERTIA}
      - RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT=${TINYROBOTJ_RMF_FLEET_ADAPTER_FRICTION_COEFFICIENT}
      - RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN=${TINYROBOTJ_RMF_FLEET_ADAPTER_AMBIENT_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN=${TINYROBOTJ_RMF_FLEET_ADAPTER_TOOL_POWER_DRAIN}
      - RMF_FLEET_ADAPTER_DRAIN_BATTERY=${TINYROBOTJ_RMF_FLEET_ADAPTER_DRAIN_BATTERY}
      - RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD=${TINYROBOTJ_RMF_FLEET_ADAPTER_RECHARGE_THRESHOLD}
      - RMF_FLEET_ADAPTER_SERVER_URI=${TINYROBOTJ_RMF_FLEET_ADAPTER_SERVER_URI}

  rmf-lift-supervisor:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-lift-supervisor
    build:
      context: .
      dockerfile: rmf/rmf-lift-supervisor.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-task-dispatcher:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-task-dispatcher
    build:
      context: .
      dockerfile: rmf/rmf-task-dispatcher.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
      - RMF_BIDDING_TIME_WINDOW=${RMF_BIDDING_TIME_WINDOW}

  rmf-traffic-blockade:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-traffic-blockade
    build:
      context: .
      dockerfile: rmf/rmf-traffic-blockade.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
    
  rmf-traffic-schedule-monitor:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-traffic-schedule-monitor
    build:
      context: .
      dockerfile: rmf/rmf-traffic-schedule-monitor.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-traffic-schedule:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-traffic-schedule
    build:
      context: .
      dockerfile: rmf/rmf-traffic-schedule.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}

  rmf-trajectory-visualizer:
    image: ${REGISTRY_URL}/rmf-deployment/rmf-trajectory-visualizer
    build:
      context: .
      dockerfile: rmf/rmf-trajectory-visualizer.Dockerfile
    volumes:
      - type: bind
        source: ${DDS_CONFIG}
        target: ${DDS_CONFIG_MOUNTPATH}
      - type: bind
        source: ${VIZ_CONFIG_FILE}
        target: ${VIZ_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${BUILDING_CONFIG_FILE}
        target: ${BUILDING_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${DASHBOARD_CONFIG_FILE}
        target: ${DASHBOARD_CONFIG_FILE_MOUNTPATH}
      - type: bind
        source: ${NAV_GRAPH_FILES}
        target: ${NAV_GRAPH_FILES_MOUNTPATH}

    network_mode: host
    environment:
      - BUILDING_CONFIG_FILE_MOUNTPATH=${BUILDING_CONFIG_FILE_MOUNTPATH}
      - RMW_IMPLEMENTATION=${RMW_IMPLEMENTATION}
      - ${DDS_ENV}=${DDS_CONFIG_MOUNTPATH}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID}
      - RMF_USE_SIM_TIME=${RMF_USE_SIM_TIME}
