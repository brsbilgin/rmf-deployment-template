# FLEET CONFIG =================================================================
# RMF Fleet parameters

rmf_fleet:
  name: "MiR250"
  limits:
    linear: [0.7, 0.75] # velocity, acceleration
    angular: [0.6, 2.0] # velocity, acceleration
  profile: # Robot profile is modelled as a circle
    footprint: 0.55 # radius in m
    vicinity: 0.7 # radius in m
  reversible: False # whether robots in this fleet can reverse
  battery_system:
    voltage: 47.7 # V
    capacity: 34.2 # Ahr
    charging_current: 30.0 # A
  mechanical_system:
    mass: 97.0 # kg
    moment_of_inertia: 7.9 #kgm^2
    friction_coefficient: 0.20
  ambient_system:
    power: 20.0 # W
  tool_system:
    power: 0.0 # W
  recharge_threshold: 0.20 # Battery level below which robots in this fleet will not operate
  recharge_soc: 1.0 # Battery level to which robots in this fleet should be charged up to during recharging tasks
  publish_fleet_state: True
  account_for_battery_drain: True
  task_capabilities: # Specify the types of RMF Tasks that robots in this fleet are capable of performing
    loop: True
    delivery: False
    clean: False
    finishing_request: "nothing" # [park, charge, nothing]

# DeliveryBot CONFIG =================================================================

mapping:
  dock_name_to_dock_finishing_waypoint:
    L1_0_pick_up: L1_0_entry
    L1_0_drop_off: L1_0_entry
    L1_1_pick_up: L1_1_entry
    L1_1_drop_off: L1_1_entry
    L5_01_pick_up: L5_01_entry
    L5_01_drop_off: L5_01_entry
    L5_02_pick_up: L5_02_entry
    L5_02_drop_off: L5_02_entry
    
mir:
  session: galen
  undocking_distance:
    after_pick_up: -1.4
    after_drop_off: -1.4
  footprint:
    normal: "MiR250 Minimum"
    with_shelf: "Medisys Cart Base"
  delete_rmf_missions: False

features:
  change_rmf_footprint_by_waypoint:
    enabled: False
    waypoint_matching: ['small_footprint','large_footprint']
    footprints:
      - name: small_footprint
        footprint: 0.35
        vicinity: 0.5
      - name: large_footprint
        footprint: 0.5
        vicinity: 0.7
  early_door_request_by_distance:
    enabled: False
    waypoint_matching: ['_door_']
    remove: ['_in','_out']
    before_open_distance: 5.0
    after_close_distance: 1.0
  
robots:
  # Here the user is expected to append the configuration for each robot in the
  # fleet.
  # Configuration for first robot in this fleet
  MiR250_1:
    robot_config:
      max_delay: 10.0 # allowed seconds of delay of the current itinerary before it gets interrupted and replanned
      api:
        base_url: https://galen-medisys.ap.ngrok.io/api/v2.0.0
        user: admin
        password: 8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
    rmf_config:
      robot_state_update_frequency: 0.5
      start:
        map_name: "L5"  
        # waypoint: "charger_deliverybot1" # Optional
        # orientation: 0.0 # Optional, radians
        waypoint: null
        orientation: null
      charger:
        waypoint: "mir250_charger"

test_coordinates:
  rmf: 
    "L1": []
    "L5": []
  robot: 
    "L1": []
    "L5": [
        [31.2, 26.2],
        [29.05, 24.1],
        [29.4, 26.2],
        [29.05, 26.15]
    ]

# TRANSFORM CONFIG =============================================================
# For computing transforms between Robot and RMF coordinate systems
reference_coordinates:
  rmf: 
    "L1": [
        [15.44, -9.62], #fid2
        [15.53, -21.00], #fid3
        [22.1, -20.9], #fid5
        [22.1, -9.53] #fid7
        ]
    "L5": [ # TODO
      [15.44, -9.62],
      [15.53, -21.00],
      [22.1, -20.9],
      [22.1, -9.53]
        ]
  robot: 
    "L1": [
        [22.45,  80.3],
        [33.6,  80.3],
        [33.6, 87.1],
        [22.45, 87.1]
        ]
    "L5": [
        [22.45,  80.3],
        [33.6,  80.3],
        [33.6, 87.1],
        [22.45, 87.1]
        ]



